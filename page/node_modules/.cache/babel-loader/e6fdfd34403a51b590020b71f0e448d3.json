{"remainingRequest":"E:\\diary\\page\\node_modules\\babel-loader\\lib\\index.js!E:\\diary\\page\\src\\utils\\app.js","dependencies":[{"path":"E:\\diary\\page\\src\\utils\\app.js","mtime":1661944281763},{"path":"E:\\diary\\page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661850918419},{"path":"E:\\diary\\page\\node_modules\\babel-loader\\lib\\index.js","mtime":1661850925720}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport router from \"../router/index\"; //请求拦截器\n// axios.interceptors.request.use((config) => {\n// //如果存在token，请求携带token\n// if(window.sessionStorage.getItem('tokenStr')){\n// config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n// }\n// return config ;\n// }, (error) => {\n//    Message.error({ message: error });\n// })\n//api接口 响应成功 / 响应失败 【响应拦截器】\n//后端提供：响应码，响应信息，对象\n\naxios.interceptors.response.use(function (success) {\n  if (success.status && success.status == 200) {\n    if (success.data.code == 500 || success.data.code == 401 || success.data.code == 403) {\n      //接口请求成功，业务逻辑错误\n      Message.error({\n        message: success.data.message\n      });\n      return;\n    }\n\n    if (success.data.message) {\n      Message({\n        message: success.data.message\n      });\n    }\n  }\n\n  return success.data;\n}, function (error) {\n  if (error.response.code == 504 || error.response.code == 404) {\n    Message.error({\n      message: '服务器被吃了( ╯□╰ )'\n    });\n  } else if (error.response.code == 403) {\n    Message.error({\n      message: '权限不足，请联系管理员'\n    });\n  } else if (error.response.code == 401) {\n    Message.error({\n      message: '请登录账号'\n    });\n    router.replace('/');\n  } else {\n    if (error.response.message) {\n      Message({\n        message: error.response.message\n      });\n    } else {\n      Message({\n        message: '该错误触及盲区(●ˇ∀ˇ●)'\n      });\n    }\n  }\n}); //封装请求\n//post\n\nvar base = '';\nexport var postRequest = function postRequest(url, params) {\n  return axios({\n    method: 'post',\n    url: '${base}${url}',\n    data: params\n  });\n}; //put\n\nexport var putRequest = function putRequest(url, params) {\n  return axios({\n    method: 'put',\n    url: '${base}${url}',\n    data: params\n  });\n}; //get\n\nexport var getRequest = function getRequest(url, params) {\n  return axios({\n    method: 'get',\n    url: '${base}${url}',\n    data: params\n  });\n}; //del\n\nexport var deleteRequest = function deleteRequest(url, params) {\n  return axios({\n    method: 'delete',\n    url: '${base}${url}',\n    data: params\n  });\n};",{"version":3,"sources":["E:\\diary\\page\\src\\utils\\app.js"],"names":["axios","Message","router","interceptors","response","use","success","status","data","code","error","message","replace","base","postRequest","url","params","method","putRequest","getRequest","deleteRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,wB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAACC,OAAD,EAAa;AAC1C,MAAIA,OAAO,CAACC,MAAR,IAAkBD,OAAO,CAACC,MAAR,IAAkB,GAAxC,EAA6C;AAC1C,QAAID,OAAO,CAACE,IAAR,CAAaC,IAAb,IAAqB,GAArB,IAA4BH,OAAO,CAACE,IAAR,CAAaC,IAAb,IAAqB,GAAjD,IAAwDH,OAAO,CAACE,IAAR,CAAaC,IAAb,IAAqB,GAAjF,EAAsF;AAAI;AACvFR,MAAAA,OAAO,CAACS,KAAR,CAAc;AAAEC,QAAAA,OAAO,EAAEL,OAAO,CAACE,IAAR,CAAaG;AAAxB,OAAd;AACA;AACF;;AACD,QAAIL,OAAO,CAACE,IAAR,CAAaG,OAAjB,EAA0B;AACvBV,MAAAA,OAAO,CAAC;AAAEU,QAAAA,OAAO,EAAEL,OAAO,CAACE,IAAR,CAAaG;AAAxB,OAAD,CAAP;AACF;AACH;;AACD,SAAOL,OAAO,CAACE,IAAf;AACF,CAXD,EAWG,UAACE,KAAD,EAAW;AACX,MAAIA,KAAK,CAACN,QAAN,CAAeK,IAAf,IAAuB,GAAvB,IAA8BC,KAAK,CAACN,QAAN,CAAeK,IAAf,IAAuB,GAAzD,EAA8D;AAC3DR,IAAAA,OAAO,CAACS,KAAR,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACF,GAFD,MAEO,IAAID,KAAK,CAACN,QAAN,CAAeK,IAAf,IAAuB,GAA3B,EAAgC;AACpCR,IAAAA,OAAO,CAACS,KAAR,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACF,GAFM,MAEA,IAAID,KAAK,CAACN,QAAN,CAAeK,IAAf,IAAuB,GAA3B,EAAgC;AACpCR,IAAAA,OAAO,CAACS,KAAR,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAT,IAAAA,MAAM,CAACU,OAAP,CAAe,GAAf;AACF,GAHM,MAGA;AACJ,QAAIF,KAAK,CAACN,QAAN,CAAeO,OAAnB,EAA4B;AACzBV,MAAAA,OAAO,CAAC;AAAEU,QAAAA,OAAO,EAAED,KAAK,CAACN,QAAN,CAAeO;AAA1B,OAAD,CAAP;AACF,KAFD,MAEO;AACJV,MAAAA,OAAO,CAAC;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAP;AACF;AACH;AACH,CA1BD,E,CA4BA;AACA;;AACA,IAAIE,IAAI,GAAG,EAAX;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,MAAN,EAAiB;AACzC,SAAOhB,KAAK,CAAC;AACViB,IAAAA,MAAM,EAAE,MADE;AAEVF,IAAAA,GAAG,EAAE,eAFK;AAGVP,IAAAA,IAAI,EAAEQ;AAHI,GAAD,CAAZ;AAKF,CANM,C,CAQP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACH,GAAD,EAAMC,MAAN,EAAiB;AACxC,SAAOhB,KAAK,CAAC;AACViB,IAAAA,MAAM,EAAE,KADE;AAEVF,IAAAA,GAAG,EAAE,eAFK;AAGVP,IAAAA,IAAI,EAAEQ;AAHI,GAAD,CAAZ;AAKF,CANM,C,CAQP;;AACA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACJ,GAAD,EAAMC,MAAN,EAAiB;AACxC,SAAOhB,KAAK,CAAC;AACViB,IAAAA,MAAM,EAAE,KADE;AAEVF,IAAAA,GAAG,EAAE,eAFK;AAGVP,IAAAA,IAAI,EAAEQ;AAHI,GAAD,CAAZ;AAKF,CANM,C,CAQP;;AACA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACL,GAAD,EAAMC,MAAN,EAAiB;AAC3C,SAAOhB,KAAK,CAAC;AACViB,IAAAA,MAAM,EAAE,QADE;AAEVF,IAAAA,GAAG,EAAE,eAFK;AAGVP,IAAAA,IAAI,EAAEQ;AAHI,GAAD,CAAZ;AAKF,CANM","sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui';\nimport router from '../router/index'\n\n//请求拦截器\n// axios.interceptors.request.use((config) => {\n// //如果存在token，请求携带token\n// if(window.sessionStorage.getItem('tokenStr')){\n// config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n// }\n// return config ;\n// }, (error) => {\n//    Message.error({ message: error });\n// })\n\n//api接口 响应成功 / 响应失败 【响应拦截器】\n//后端提供：响应码，响应信息，对象\naxios.interceptors.response.use((success) => {\n   if (success.status && success.status == 200) {\n      if (success.data.code == 500 || success.data.code == 401 || success.data.code == 403) {   //接口请求成功，业务逻辑错误\n         Message.error({ message: success.data.message });\n         return;\n      }\n      if (success.data.message) {\n         Message({ message: success.data.message });\n      }\n   }\n   return success.data;\n}, (error) => {\n   if (error.response.code == 504 || error.response.code == 404) {\n      Message.error({ message: '服务器被吃了( ╯□╰ )' });\n   } else if (error.response.code == 403) {\n      Message.error({ message: '权限不足，请联系管理员' });\n   } else if (error.response.code == 401) {\n      Message.error({ message: '请登录账号' });\n      router.replace('/');\n   } else {\n      if (error.response.message) {\n         Message({ message: error.response.message });\n      } else {\n         Message({ message: '该错误触及盲区(●ˇ∀ˇ●)' });\n      }\n   }\n});\n\n//封装请求\n//post\nlet base = '';\nexport const postRequest = (url, params) => {\n   return axios({\n      method: 'post',\n      url: '${base}${url}',\n      data: params\n   })\n};\n\n//put\nexport const putRequest = (url, params) => {\n   return axios({\n      method: 'put',\n      url: '${base}${url}',\n      data: params\n   })\n};\n\n//get\nexport const getRequest = (url, params) => {\n   return axios({\n      method: 'get',\n      url: '${base}${url}',\n      data: params\n   })\n};\n\n//del\nexport const deleteRequest = (url, params) => {\n   return axios({\n      method: 'delete',\n      url: '${base}${url}',\n      data: params\n   })\n};\n"]}]}